name: CI

on:
  workflow_call:

jobs:
  build-scan-test-rocks:
    name: Build, scan, and test rock
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: read
    strategy:
      matrix:
        rock:
          - jupyter-pytorch-cuda-full
          - jupyter-pytorch-full
          - jupyter-tensorflow-cuda-full
          - jupyter-tensorflow-full
          - jupyter-scipy
          - notebook-controller
          - volumes-web-app
    steps:
      # Ideally we'd use self-hosted runners, but this effort is still not stable.
      # This action will remove unused software (dotnet, haskell, android libs, codeql,
      # and docker images) from the GH runner, which will liberate around 60 GB of storage
      # distributed in 40GB for root and around 20 for a mnt point.
      - name: Maximise GH runner space
        uses: easimon/maximize-build-space@v7
        with:
          root-reserve-mb: 40960
          remove-dotnet: 'true'
          remove-haskell: 'true'
          remove-android: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v39

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done

      - name: Cancel run if none of files have changed
        if: steps.changed-files.outputs.any_changed != 'true'
        uses: styfle/cancel-workflow-action@0.9.0

      - name: Wait for run cancellation
        if: steps.changed-files.outputs.any_changed != 'true'
        shell: bash
        run: while true; do echo "Waiting for job to be cancelled"; sleep 5; done

      - name: Build ROCK
        uses: canonical/craft-actions/rockcraft-pack@main
        id: rockcraft
        with:
          path: ./${{ matrix.rock }}

      - name: Copy ROCK to Docker
        id: rock_in_docker
        run: |
          NAME=$(yq eval ".name" rockcraft.yaml)
          VERSION=$(yq eval ".version" rockcraft.yaml)
          ARCH=$(yq eval ".platforms | keys" rockcraft.yaml | awk -F ' ' '{print $2}')
          ROCK="${NAME}_${VERSION}_${ARCH}"
          sudo skopeo --insecure-policy copy oci-archive:$ROCK.rock docker-daemon:$ROCK:$VERSION
          echo "image=$ROCK:$VERSION" >> "$GITHUB_OUTPUT"
        working-directory: ${{ matrix.rock }}

      - name: Scan for vulnerabilities
        id: scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'image'
          image-ref: '${{ steps.rock_in_docker.outputs.image }}'
          format: 'json'
          output: '${{ matrix.rock }}/trivy-report-${{ matrix.rock }}.json'
          ignore-unfixed: true

      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
            provider: microk8s
            channel: 1.24/stable
            charmcraft-channel: latest/candidate
            microk8s-addons: "dns hostpath-storage rbac ingress metallb:10.64.140.43-10.64.140.49"
            juju-channel: 2.9/stable

      - name: Sanity tests
        run: |
          tox -e sanity
        working-directory: ./${{ matrix.rock }}

      - name: Integration tests
        run: |
          tox -e integration
        working-directory: ./${{ matrix.rock }}

